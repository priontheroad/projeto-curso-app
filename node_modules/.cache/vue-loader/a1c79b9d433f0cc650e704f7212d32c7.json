{"remainingRequest":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/src/views/TelaInicial/Historico/TabelaHistorico/TabelaHistorico.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/src/views/TelaInicial/Historico/TabelaHistorico/TabelaHistorico.vue","mtime":1678361197243},{"path":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnYtZGF0YS10YWJsZS0tZGVuc2UgPiAudi1kYXRhLXRhYmxlX193cmFwcGVyID4gdGFibGUgPiB0Ym9keSA+IHRyID4gdGQsCi52LWRhdGEtdGFibGUtLWRlbnNlID4gLnYtZGF0YS10YWJsZV9fd3JhcHBlciA+IHRhYmxlID4gdGhlYWQgPiB0ciA+IHRkLAoudi1kYXRhLXRhYmxlLS1kZW5zZSA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIgPiB0YWJsZSA+IHRmb290ID4gdHIgPiB0ZCB7CiAgaGVpZ2h0OiAzM3B4Owp9Ci52LWRhdGEtZm9vdGVyIHsKICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOwp9Cg=="},{"version":3,"sources":["TabelaHistorico.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAseA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TabelaHistorico.vue","sourceRoot":"src/views/TelaInicial/Historico/TabelaHistorico","sourcesContent":["<template>\n  <v-container fluid class=\"px-4\">\n    <v-data-table\n      dense\n      v-model=\"selected\"\n      show-select\n      :headers=\"headers\"\n      :items=\"historico\"\n      :search=\"search\"\n      class=\"elevation-0 main-table\"\n      :server-items-length=\"pagination.totalRegister\"\n      :options.sync=\"options\"\n      locale=\"pt\"\n      :footer-props=\"{\n        sortDesc: true,\n        'items-per-page-options': [10],\n        multiSort: false,\n        showFirstLastPage: true,\n        disableItemsPerPage: true,\n        'items-per-page-text': 'Itens por página',\n        pageText: '{0}-{1} de {2}',\n      }\"\n    >\n      <!-- :custom-filter=\"filtroPersonalizado\" -->\n      <template v-slot:item=\"props\">\n        <tr\n          style=\"cursor: pointer\"\n          :key=\"props.item.id\"\n          @click=\"selecionarResultado($event, props.item)\"\n        >\n          <td class=\"dont_send_results\">\n            <v-checkbox\n              hide-details\n              color=\"gray\"\n              :input-value=\"props.isSelected\"\n              @change=\"props.select($event)\"\n            ></v-checkbox>\n          </td>\n          <td>\n            <span v-if=\"props.item.descricao !== ''\">{{\n              props.item.descricao | truncate(25, \"...\")\n            }}</span>\n            <span v-if=\"props.item.descricao === ''\"> -- </span>\n          </td>\n          <td>\n            <span>{{ props.item.numero_declaracao }}</span>\n          </td>\n          <td>\n            <span>{{ dateTimeComputed(props.item.data) }}</span>\n          </td>\n          <td>\n            <span>{{ props.item.estado.sigla }}</span>\n          </td>\n          <td>\n            <span>{{\n              vlrMoeda(\n                props.item.valor_mercadoria,\n                props.item.cotacao_mercadoria\n              )\n            }}</span>\n          </td>\n          <td>\n            <span>{{ props.item.tipo_operacao.descricao }}</span>\n          </td>\n          <td>\n            <v-chip label :color=\"props.item.bl_xml == '1' ? 'info' : ''\" class=\"px-2\" x-small>\n              {{ props.item.bl_xml == '1' ? 'XML' : 'Manual' }}\n            </v-chip>\n          </td>\n          <td class=\"dont_send_results d-flex justify-end\">\n            <v-icon small color=\"red\" @click=\"showDeleteDialog(props.item.id)\">\n              mdi-delete-outline\n            </v-icon>\n          </td>\n        </tr>\n      </template>\n      <template v-slot:top>\n        <div class=\"d-flex align-center py-4 mt-4 pl-0\">\n          <v-btn\n            :disabled=\"selected.length == 0\"\n            @click=\"deleteItens\"\n            small\n            class=\"btn-delete\"\n          >\n            Excluir\n          </v-btn>\n          <v-divider\n            v-show=\"selected.length > 0\"\n            class=\"ml-2 mr-4\"\n            vertical\n          ></v-divider>\n          <p v-show=\"selected.length == 1\" class=\"text-body-2 ma-0\">\n            {{ selected.length }} Simulação selecionada\n          </p>\n          <p v-show=\"selected.length > 1\" class=\"text-body-2 ma-0\">\n            {{ selected.length }} Simulações selecionadas\n          </p>\n          <v-text-field\n            v-model=\"search\"\n            class=\"ml-auto\"\n            append-icon=\"mdi-magnify\"\n            label=\"Pesquisar\"\n            outlined\n            clearable\n            dense\n            hide-details\n            style=\"max-width: 300px\"\n          ></v-text-field>\n        </div>\n      </template>\n      <!-- <template v-slot:no-data>\n        <v-btn color=\"primary\"> Reset </v-btn>\n      </template> -->\n    </v-data-table>\n    <!-- snackbar do botão excluir consulta -->\n    <SnackBarDelete\n      :snackbar=\"dialogDelete\"\n      @cancelar_snackbar=\"closeDelete\"\n      @confirmar_snackbar=\"\n        excluirTodos == true ? deleteItemConfirm() : deleteItem()\n      \"\n      :message=\"'Você tem certeza que deseja excluir a consulta de rateio?'\"\n    />\n  </v-container>\n</template>\n<script>\nimport { mapGetters } from \"vuex\";\nimport Form from \"@/services/modules/form\";\nimport formataMoedaMixin from \"@/mixins/formataMoedaMixin\";\nimport formataDataMixin from \"@/mixins/formataDataMixin\";\n\nimport SnackBarDelete from \"@/components/SnackBar/SnackBarDelete.vue\";\n\nexport default {\n  components: { SnackBarDelete },\n  data: () => ({\n    options: {\n      page: 1,\n    },\n    dialog: false,\n    dialogDelete: false,\n    headers: [\n      {\n        text: \"Descrição\",\n        align: \"start\",\n        sortable: false,\n        value: \"descricao\",\n        filterable: true,\n      },\n      { text: \"Número da DI\", value: \"numero_declaracao\" },\n      { text: \"Data da DI/DUIMP\", value: \"data\" },\n      { text: \"UF\", value: \"estado.sigla\" },\n      { text: \"VMLE\", value: \"valor_mercadoria\" },\n      { text: \"Operação\", value: \"tipo_operacao.descricao\" },\n      { text: \"Tipo Preenchimento\", value: \"bl_xml\" },\n      { text: \"\", value: \"actions\", sortable: false },\n    ],\n    selected: [],\n    editedIndex: -1,\n    editedItem: {\n      descricao: \"\",\n      numero_declaracao: 0,\n      data: 0,\n      estado: { sigla: \"\" },\n      tipo_operacao: { descricao: 0 },\n    },\n    defaultItem: {\n      descricao: \"\",\n      numero_declaracao: 0,\n      data: 0,\n      \"estado.sigla\": 0,\n      \"tipo_operacao.descricao\": 0,\n    },\n    excluirTodos: false,\n    timeoutPesquisaHistorico: \"\",\n  }),\n  mixins: [formataDataMixin, formataMoedaMixin],\n  computed: {\n    filtroHistorico() {\n      return this.historico.filter((i) => {\n        return (\n          !this.search ||\n          (typeof i.descricao == \"string\" &&\n            typeof this.search == \"string\" &&\n            i.descricao.toLowerCase().indexOf(this.search.toLowerCase()) >= 0)\n        );\n      });\n    },\n\n    loading: {\n      get() {\n        return this.$store.state.loading.loading;\n      },\n      set(newValue) {\n        if (newValue != this.loading) {\n          this.$store.commit(\"loading/setLoading\", newValue);\n        }\n      },\n    },\n    ...mapGetters(\"auth\", {\n      id_usuario: \"getIdUsuario\",\n    }),\n    ...mapGetters(\"informacoesPadrao\", {\n      status_carregamento: \"getStatusCarregamento\",\n    }),\n    formTitle() {\n      return this.editedIndex === -1 ? \"New Item\" : \"Edit Item\";\n    },\n    // chamando mixin data da DI\n    pagination: {\n      get() {\n        return this.$store.state.historico.pagination;\n      },\n      set(newValue) {\n        if (newValue != this.pagination) {\n          this.$store.commit(\"historico/setPagination\", newValue);\n        }\n      },\n    },\n    historico: {\n      get() {\n        return this.$store.state.historico.historico;\n      },\n      set(newValue) {\n        if (newValue != this.historico) {\n          this.$store.commit(\"historico/setHistorico\", newValue);\n        }\n      },\n    },\n    search: {\n      get() {\n        return this.$store.state.historico.pesquisa;\n      },\n      set(newValue) {\n        if (newValue != this.search) {\n          this.$store.commit(\"historico/setPesquisa\", newValue);\n        }\n      },\n    },\n  },\n  watch: {\n    search(val) {\n      if (val != \"\" && val != null) {\n        clearTimeout(this.timeoutPesquisaHistorico);\n        this.timeoutPesquisaHistorico = null;\n\n        this.timeoutPesquisaHistorico = setTimeout(() => {\n          this.pagination.current = 1;\n          this.options.page = 1;\n          this.$store.dispatch(\"historico/pesquisaHistorico\");\n        }, 1000);\n      } else {\n        this.pagination.current = 1;\n        this.options.page = 1;\n        this.$store.dispatch(\"historico/buscarHistorico\");\n      }\n    },\n    \"options.page\"(val) {\n      if (this.search == \"\" || this.search == null) {\n        this.pagination.current = val;\n        this.$store.dispatch(\"historico/buscarHistorico\");\n      } else {\n        this.pagination.current = val;\n        this.$store.dispatch(\"historico/pesquisaHistorico\");\n      }\n    },\n    historico(val) {\n      this.historico = val;\n    },\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    },\n  },\n  created() {},\n  filters: {\n    truncate: function (text, length, suffix) {\n      if (\n        typeof text !== \"undefined\" &&\n        text !== null &&\n        text !== \"\" &&\n        text.length > length\n      ) {\n        return text.substring(0, length) + suffix;\n      } else {\n        return text;\n      }\n    },\n  },\n  methods: {\n    teste() {\n      return this.search !== null ? this.pagination.totalRegister : \"\";\n    },\n    filtroPersonalizado(value, search, item) {\n      return search.length != 0 ? item.descricao.indexOf(search) >= 0 : true;\n    },\n\n    dateTimeComputed(data) {\n      if (data == null || data == \"\") {\n        return \"\";\n      }\n      let arDateTime = data.split(\" \");\n      return this.datePtBR(arDateTime[0]);\n    },\n\n    deleteItens() {\n      this.excluirTodos = true;\n      this.editedIndex = -1;\n      this.dialogDelete = true;\n    },\n    verifyDivCanSendResults(event) {\n      let element = event.target;\n      let indice = 6;\n      let fatherFound = \"\";\n      while (indice > 0) {\n        //verificando item inicial encontrado\n        let listClassElement = element.classList.value;\n        let findClassFound = listClassElement.indexOf(\"dont_send_results\");\n        if (findClassFound >= 0) {\n          indice = 0;\n          fatherFound = element;\n        } else {\n          //verificando pai\n          let father = element.parentElement;\n\n          //setando pai no filho\n          element = father;\n\n          listClassElement = father.classList.value;\n          findClassFound = listClassElement.indexOf(\"dont_send_results\");\n          if (findClassFound >= 0) {\n            indice = 0;\n            fatherFound = father;\n          }\n        }\n        indice--;\n      }\n\n      //se não encontrou o pai pode mandar para próxima tela\n      if (fatherFound == \"\") {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    selecionarResultado(event, item) {\n      let statusCanSendScreenResults = this.verifyDivCanSendResults(event);\n      if (statusCanSendScreenResults) {\n        this.enviaTelaResultOuEditarDeclaracao(item);\n      }\n    },\n\n    enviaTelaResultOuEditarDeclaracao(item) {\n      this.editedIndex = this.historico.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n\n      //verifica status da declaracao\n      if (this.editedItem.status_declaracao.descricao == \"Incompleto\") {\n        //TODO:: carregar informacoes para serem editadas\n\n        //metodo carrega informacoes e manda para tela de adicoes\n        this.carregaInfoItem(this.editedItem);\n      } else {\n        //TODO:: enviar para tela de resultados\n        //TODO:: carregar informacoes para serem mostradas na tela resultado\n\n        //enviar para tela resultado\n        this.$router.push({\n          path: \"/consulta/resultado\",\n        });\n      }\n    },\n    carregaInfoItem(item) {\n      //verificar se informacoesPadroes carregaram\n      if (this.status_carregamento == false) {\n        Object.bus.$emit(\"structure\", {\n          message:\n            \"Erro ao carregar informações, entre em contato com a econet.\",\n          type: \"error\",\n          timeout: 10000,\n        });\n        return false;\n      }\n\n      this.loading = true;\n      this.itemEditado = Object.assign({}, item);\n\n      let idItem = this.itemEditado.id;\n\n      let declaracao = this.$root.$api\n        .get(\"/declaracao/listar/\" + idItem)\n        .then(async (response) => {\n          if (typeof response !== \"undefined\" && response.status == \"200\") {\n            let responseNew = response.data;\n\n            let form = new Form();\n            form.carregarInfoConsulta(responseNew);\n            form.carregarResultadoTelaSimples(responseNew);\n          } else {\n            console.error(\"Erro no carregamento das informações com a API.\");\n          }\n          return response;\n        });\n\n      let id_declaracao = idItem;\n      let adicoes = this.$store\n        .dispatch(\"adicoes/carregarAdicoes\", id_declaracao)\n        .then(async (response) => {\n          return response;\n        });\n      //OBRIGADO DEUS\n\n      Promise.all([declaracao, adicoes])\n        .then(() => {\n          setTimeout(() => {\n            this.loading = false;\n          }, 200);\n\n          this.$router.push({\n            path: \"/consulta\",\n          });\n        })\n        .catch(() => {\n          this.loading = false;\n        });\n    },\n    showDeleteDialog(item) {\n      this.excluirTodos = false;\n      this.itemToDelete = item;\n      this.dialogDelete = !this.dialogDelete;\n    },\n\n    deleteItem() {\n      this.$store\n        .dispatch(\"historico/excluirHistorico\", this.itemToDelete)\n        .then(() => {\n          this.$store.dispatch(\"historico/buscarHistorico\");\n          this.closeDelete();\n        });\n    },\n\n    deleteItemConfirm() {\n      //TODO:: copiar igual no verbas\n      //TODO:: falta deletar ids selecionados\n\n      let lista_ids = [];\n\n      this.selected.forEach((element) => {\n        lista_ids.push(element.id);\n      }, lista_ids);\n\n      this.$store.dispatch(\"historico/excluirHistorico\", lista_ids).then(() => {\n        this.$store.dispatch(\"historico/buscarHistorico\");\n        this.closeDelete();\n        this.selected = [];\n      });\n    },\n\n    close() {\n      this.dialog = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n    save() {\n      if (this.editedIndex > -1) {\n        Object.assign(this.historico[this.editedIndex], this.editedItem);\n      } else {\n        this.historico.push(this.editedItem);\n      }\n      this.close();\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n.v-data-table--dense > .v-data-table__wrapper > table > tbody > tr > td,\n.v-data-table--dense > .v-data-table__wrapper > table > thead > tr > td,\n.v-data-table--dense > .v-data-table__wrapper > table > tfoot > tr > td {\n  height: 33px;\n}\n.v-data-footer {\n  justify-content: flex-end;\n}\n</style>"]}]}