{"remainingRequest":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/src/components/ArquivosDiversos/Modal/ModalConsulta.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/src/components/ArquivosDiversos/Modal/ModalConsulta.vue","mtime":1678361197239},{"path":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY3VzdG9tLWxvYWRlciB7CiAgYW5pbWF0aW9uOiBsb2FkZXIgMXMgaW5maW5pdGU7CiAgZGlzcGxheTogZmxleDsKfQpALW1vei1rZXlmcmFtZXMgbG9hZGVyIHsKICBmcm9tIHsKICAgIHRyYW5zZm9ybTogcm90YXRlKDApOwogIH0KICB0byB7CiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOwogIH0KfQpALXdlYmtpdC1rZXlmcmFtZXMgbG9hZGVyIHsKICBmcm9tIHsKICAgIHRyYW5zZm9ybTogcm90YXRlKDApOwogIH0KICB0byB7CiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOwogIH0KfQpALW8ta2V5ZnJhbWVzIGxvYWRlciB7CiAgZnJvbSB7CiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwKTsKICB9CiAgdG8gewogICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsKICB9Cn0KQGtleWZyYW1lcyBsb2FkZXIgewogIGZyb20gewogICAgdHJhbnNmb3JtOiByb3RhdGUoMCk7CiAgfQogIHRvIHsKICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7CiAgfQp9Cg=="},{"version":3,"sources":["ModalConsulta.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ModalConsulta.vue","sourceRoot":"src/components/ArquivosDiversos/Modal","sourcesContent":["<template>\n  <div>\n    <v-dialog v-model=\"handleModalConsulta\" scrollable persistent width=\"700\">\n      <v-card max-height=\"650px\" min-height=\"90vh\">\n        <v-card-title class=\"text-h5 tab\">\n          <div class=\"d-flex justify-space-between\" style=\"min-width: 100%\">\n            <div>\n              <span\n                v-if=\"editandoModalConsulta == false\"\n                class=\"standard-subtitle\"\n              >\n                Criar consulta\n              </span>\n              <span v-else class=\"standard-subtitle\"> Editar </span>\n            </div>\n            <div>\n              <v-btn\n                @click.stop=\"infoFechamentoModal()\"\n                icon\n                color=\"red\"\n                class=\"text-h6\"\n              >\n                <v-icon>mdi-close</v-icon>\n              </v-btn>\n            </div>\n          </div>\n        </v-card-title>\n        <v-card-text>\n          <Aba v-if=\"handleModalConsulta\" ref=\"aba\" />\n        </v-card-text>\n        <v-card-actions class=\"d-flex justify-space-between\">\n          <div>\n            <v-btn\n              v-show=\"\n                this.abaAtual == 'aba-CustosImportacao' ||\n                this.abaAtual == 'aba-OutrasDespesas'\n              \"\n              @click=\"etapaAnterior()\"\n              color=\"white\"\n              class=\"elevation-0\"\n            >\n              <v-icon color=\"#2d5071\" left>mdi-arrow-left</v-icon>\n              <span style=\"color: #2d5071; text-transform: none\">Voltar</span>\n            </v-btn>\n          </div>\n          <div>\n            <v-btn\n              v-show=\"this.abaAtual !== 'aba-OutrasDespesas'\"\n              @click=\"proximaEtapa()\"\n              color=\"#2d5071\"\n              class=\"elevation-0\"\n            >\n              <span style=\"color: white; text-transform: none\">Próximo</span>\n              <v-icon color=\"white\" right>mdi-arrow-right</v-icon>\n            </v-btn>\n            <v-btn\n              :loading=\"loadingEnvio\"\n              v-show=\"this.abaAtual == 'aba-OutrasDespesas'\"\n              @click=\"\n                criarOuEditarConsulta();\n                loader = 'loading';\n              \"\n              color=\"#2d5071\"\n              class=\"elevation-0\"\n            >\n              <span style=\"color: white; text-transform: none\">{{\n                this.editandoModalConsulta == false\n                  ? \"Criar Consulta\"\n                  : \"Editar\"\n              }}</span>\n              <template v-slot:loader>\n                <span class=\"custom-loader\">\n                  <v-icon small color=\"white\"\n                    >mdi-clock-time-twelve-outline</v-icon\n                  >\n                </span>\n              </template>\n              <v-icon color=\"white\" right>mdi-arrow-right</v-icon>\n            </v-btn>\n          </div>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <SnackBarDelete\n      :snackbar=\"snackFechar\"\n      :message=\"'Deseja fechar a consulta? Seus dados podem não ser salvo'\"\n      @cancelar_snackbar=\"snackFechar = false\"\n      @confirmar_snackbar=\"confirmaFechamentoModal\"\n      :labelConfirmar=\"'Fechar'\"\n      :iconeConfirmar=\"'mdi-check'\"\n    />\n  </div>\n</template>\n<script>\nimport Aba from \"../../Abas/Aba.vue\";\nimport { mapGetters } from \"vuex\";\nimport Form from \"@/services/modules/form\";\nimport SnackBarDelete from \"../../SnackBar/SnackBarDelete.vue\";\n\nexport default {\n  name: \"ModalConsulta\",\n  components: {\n    Aba,\n    SnackBarDelete,\n  },\n\n  data() {\n    return {\n      snackFechar: false,\n      loader: null,\n      loading: false,\n      loadingEnvio: false,\n    };\n  },\n  watch: {\n    loader() {\n      const l = this.loader;\n      this[l] = !this[l];\n\n      setTimeout(() => (this[l] = false), 6000);\n\n      this.loader = null;\n    },\n\n    alterarAba(aba) {\n      this.alterarAba = aba;\n    },\n    handleModalConsulta(val) {\n      //abrindo criar consulta\n      if (val == true) {\n        // limpar inputs quando usuario esta criando uma nova declaracao\n        if (this.editandoModalConsulta == false) {\n          this.adicoes.dados = [];\n        }\n\n        if (this.editandoModalConsulta == true) {\n          //edição\n          // copiando consulta e passando para formConsulta\n          let consultaClone = Object.assign({}, this.consulta);\n          this.formConsulta.id = consultaClone.id;\n          this.formConsulta.descricao = consultaClone.descricao;\n          this.formConsulta.data = consultaClone.data;\n          this.formConsulta.numero_declaracao = consultaClone.numero_declaracao;\n          this.formConsulta.codigo_estado = consultaClone.codigo_estado;\n          this.formConsulta.tipo_operacao = consultaClone.tipo_operacao;\n          this.formConsulta.cotacoes = consultaClone.cotacoes;\n          this.formConsulta.blSomaCapataziaVMLD =\n            consultaClone.blSomaCapataziaVMLD;\n\n          this.formConsulta.valor_mercadoria_moeda = consultaClone.valor_mercadoria.moeda;\n          this.formConsulta.valor_mercadoria_valor = consultaClone.valor_mercadoria.valor;\n\n          this.formConsulta.seguro_internacional_moeda = consultaClone.seguro_internacional.moeda;\n          this.formConsulta.seguro_internacional_valor = consultaClone.seguro_internacional.valor;\n\n          this.formConsulta.frete_internacional_moeda = consultaClone.frete_internacional.moeda;\n          this.formConsulta.frete_internacional_valor = consultaClone.frete_internacional.valor;\n\n          this.formConsulta.capatazia = consultaClone.capatazia;\n          this.formConsulta.afrmm = consultaClone.afrmm;\n          this.formConsulta.outras_despesas = consultaClone.outras_despesas;\n\n          this.formConsulta.mercadoria_peso_liquido_total = consultaClone.mercadoria.peso_liquido_total;\n          this.formConsulta.mercadoria_quantidade_total_adicoes = consultaClone.mercadoria.quantidade_total_adicoes;\n        } else {\n          //pegando moeda EUA, para vir pré-selecionado na hora que modal Consulta abrir\n          let moeda_eua = this.moedas.filter(function (element) {\n            if (element.sigla_moeda == \"USD\") {\n              return element;\n            }\n          });\n\n          //pegando primeiro elemento do filter\n          if (\n            typeof moeda_eua !== \"undefined\" &&\n            typeof moeda_eua[0] !== \"undefined\" &&\n            moeda_eua.length > 0\n          ) {\n            moeda_eua = moeda_eua[0].sigla_moeda;\n          } else {\n            moeda_eua = \"\";\n          }\n\n          //criando declaracao\n          // zerando campos do formConsulta\n          this.formConsulta.id = \"\";\n          this.formConsulta.descricao = \"\";\n          this.formConsulta.data = \"\";\n          this.formConsulta.numero_declaracao = \"\";\n          this.formConsulta.codigo_estado = [];\n          this.formConsulta.tipo_operacao = \"\";\n          this.formConsulta.cotacoes = [];\n\n          this.formConsulta.valor_mercadoria_moeda = moeda_eua;\n          this.formConsulta.valor_mercadoria_valor = \"\";\n\n          this.formConsulta.seguro_internacional_moeda = moeda_eua;\n          this.formConsulta.seguro_internacional_valor = \"\";\n\n          this.formConsulta.frete_internacional_moeda = moeda_eua;\n          this.formConsulta.frete_internacional_valor = \"\";\n\n          this.formConsulta.capatazia = \"\";\n          this.formConsulta.afrmm = \"\";\n          this.formConsulta.blSomaCapataziaVMLD = \"\";\n          this.formConsulta.outras_despesas = [];\n          this.formConsulta.mercadoria_peso_liquido_total = \"\";\n          this.formConsulta.mercadoria_quantidade_total_adicoes = \"\";\n          this.abaAtual = 'aba-DadosGerais';\n        }\n      }\n    },\n  },\n  computed: {\n    ...mapGetters(\"consulta\", {\n      consulta: \"getState\",\n    }),\n    ...mapGetters(\"formConsulta\", {\n      formConsulta: \"getState\",\n    }),\n    ...mapGetters(\"adicoes\", {\n      adicoes: \"getState\",\n    }),\n    ...mapGetters(\"informacoesPadrao\", {\n      moedas: \"getTipoMoeda\",\n    }),\n    abaAtual: {\n      get() {\n        return this.$store.state.aba.abaAtual;\n      },\n      set(newValue) {\n        if (newValue != this.abaAtual) {\n          this.$store.commit(\"aba/setAbaAtual\", newValue);\n        }\n      },\n    },\n    editandoModalConsulta: {\n      get() {\n        return this.$store.state.modalConsulta.editando;\n      },\n      set(newValue) {\n        if (newValue != this.editandoModalConsulta) {\n          this.$store.commit(\"modalConsulta/setEditando\", newValue);\n        }\n      },\n    },\n    handleModalConsulta: {\n      get() {\n        return this.$store.state.modalConsulta.modalConsulta;\n      },\n      set(newValue) {\n        if (newValue != this.handleModalConsulta) {\n          this.$store.commit(\"modalConsulta/setModalConsulta\", newValue);\n        }\n      },\n    },\n    handleNovaSimulacao: {\n      get() {\n        return this.$store.state.modalNovaSimulacao.modalNovaSimulacao;\n      },\n      set(newValue) {\n        if (newValue != this.handleNovaSimulacao) {\n          this.$store.commit(\n            \"modalNovaSimulacao/setModalNovaSimulacao\",\n            newValue\n          );\n        }\n      },\n    },\n  },\n  methods: {\n    //avança aba através do botão proximo\n    proximaEtapa() {\n      if (this.abaAtual == \"aba-DadosGerais\") {\n        let verificacao = this.$refs.aba.verificaFormularioDadosGerais();\n        if (verificacao) {\n          this.alterarAba(\"aba-CustosImportacao\");\n        }\n      } else if (this.abaAtual == \"aba-CustosImportacao\") {\n        let verificacao = this.$refs.aba.verificaFormularioCustosImportacao();\n        if (verificacao) {\n          this.alterarAba(\"aba-OutrasDespesas\");\n        }\n      }\n    },\n\n    etapaAnterior() {\n      if (this.abaAtual == \"aba-CustosImportacao\") {\n        this.alterarAba(\"aba-DadosGerais\");\n      } else if (this.abaAtual == \"aba-OutrasDespesas\") {\n        this.alterarAba(\"aba-CustosImportacao\");\n      }\n    },\n\n    criarOuEditarConsulta() {\n      let verificaLinhaAberta = this.$refs.aba.verificaLinhaAberta();\n      this.handleNovaSimulacao == false;\n      this.loadingEnvio = true;\n\n      if (verificaLinhaAberta) {\n        //dar um erro falta salvar outras despesas\n        Object.bus.$emit(\"structure\", {\n          type: \"error\",\n          message: \"Falta salvar/cancelar preenchimento de outra despesa.\",\n          timeout: 10000,\n        });\n\n        this.loadingEnvio = false;\n        return false;\n      }\n\n      //popular modulo da consulta com dados retornados\n\n      //criar dados para enviar para criar/editar consulta\n      let formConsulta = JSON.parse(JSON.stringify(this.formConsulta));\n\n      formConsulta.outras_despesas.forEach((element) => {\n        if (element.incide_icms == null || element.incide_icms == \"\") {\n          element.incide_icms = false;\n        }\n      });\n\n      let dados = {\n        id: formConsulta.id,\n        descricao: formConsulta.descricao,\n        data: formConsulta.data,\n        numero_declaracao: formConsulta.numero_declaracao,\n        codigo_estado: formConsulta.codigo_estado,\n        tipo_operacao: formConsulta.tipo_operacao,\n        cotacoes: formConsulta.cotacoes,\n        valor_mercadoria: {\n          moeda: formConsulta.valor_mercadoria_moeda,\n          valor: formConsulta.valor_mercadoria_valor,\n        },\n        seguro_internacional: {\n          moeda: formConsulta.seguro_internacional_moeda,\n          valor: formConsulta.seguro_internacional_valor,\n        },\n        frete_internacional: {\n          moeda: formConsulta.frete_internacional_moeda,\n          valor: formConsulta.frete_internacional_valor,\n        },\n        capatazia: formConsulta.capatazia,\n        afrmm: formConsulta.afrmm,\n        blSomaCapataziaVMLD: formConsulta.blSomaCapataziaVMLD,\n        outras_despesas: formConsulta.outras_despesas,\n        mercadoria: {\n          peso_liquido_total: formConsulta.mercadoria_peso_liquido_total,\n          quantidade_total_adicoes:\n            formConsulta.mercadoria_quantidade_total_adicoes,\n        },\n      };\n\n      let tipoRequest = this.editandoModalConsulta == false ? \"post\" : \"put\";\n      let form = new Form();\n\n      let declaracao = this.$root.$api[tipoRequest](\"/declaracao\", dados).then(\n        async (response) => {\n          if (response.status == \"200\") {\n            //consulta criada com sucesso\n\n            let responseNew = response.data;\n            this.handleNovaSimulacao = false;\n\n            // //o id é na criacao e na edicao\n            form.carregarIdConsulta(responseNew);\n\n            let message =\n              this.editandoModalConsulta == false\n                ? \"Declaração criada com sucesso.\"\n                : \"Declaração editada com sucesso.\";\n\n            Object.bus.$emit(\"structure\", {\n              message: message,\n              type: \"success\",\n              timeout: 2000,\n            });\n\n            //fecha modals de preenchimento\n            this.loadingEnvio = false;\n            this.fechandoModalConsulta();\n            this.handleNovaSimulacao = false;\n          } else {\n            //ver se é erros de campos que laravel retornou\n            this.loadingEnvio = false;\n            // criar lista de erro ou pega primeiro erro\n            if (\n              typeof response !== \"undefined\" &&\n              typeof response.data !== \"undefined\" &&\n              typeof response.data.errors !== \"undefined\"\n            ) {\n              //irei pegar o primeiro erro\n              let listErrors = [];\n\n              let errors = response.data.errors;\n              Object.keys(errors).forEach(function (element) {\n                listErrors.push(errors[element][0]);\n              });\n              Object.bus.$emit(\"structure\", {\n                message: listErrors[0],\n                timeout: 2000,\n              });\n\n              return false;\n            }\n\n            if (\n              typeof response !== \"undefined\" &&\n              typeof response.data !== \"undefined\" &&\n              typeof response.data.message !== \"undefined\"\n            ) {\n              Object.bus.$emit(\"structure\", {\n                message: response.data.message,\n                timeout: 2000,\n              });\n              return false;\n            }\n          }\n\n          return response;\n        }\n      );\n\n      let that = this;\n      Promise.resolve(declaracao).then(function (response) {\n        if (\n          typeof response.data.id !== \"undefined\" &&\n          response.data.id !== null &&\n          response.data.id !== \"\"\n        ) {\n          //atualizando resultado simples\n          let id_declaracao = response.data.id;\n          that.$root.$api\n            .get(\"/declaracao/listar/\" + id_declaracao)\n            .then(async (response) => {\n              if (typeof response !== \"undefined\" && response.status == \"200\") {\n                let resultaAtualizado = response.data;\n                form.carregarInfoConsulta(resultaAtualizado);\n                form.carregarResultadoTelaSimples(resultaAtualizado);\n\n                //mandando usuario para tela /consulta\n                if (that.$router.currentRoute.path !== \"/consulta\") {\n                  setTimeout(() => {\n                    that.$router.push(\"/consulta\");\n                  }, 200);\n                }\n              } else {\n                console.error(\n                  \"Erro no carregamento das informações com a API.\"\n                );\n              }\n            });\n        }\n      });\n    },\n\n    alterarAba(aba) {\n      this.abaAtual = aba;\n    },\n\n    confirmaFechamentoModal() {\n      this.handleModalConsulta = false;\n      this.editandoModalConsulta = false;\n      this.snackFechar = false;\n      this.handleNovaSimulacao = false;\n    },\n\n    fechandoModalConsulta() {\n      this.handleModalConsulta = false;\n      this.editandoModalConsulta = false;\n    },\n\n    infoFechamentoModal() {\n      this.snackFechar = true;\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n.custom-loader {\n  animation: loader 1s infinite;\n  display: flex;\n}\n@-moz-keyframes loader {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n@-webkit-keyframes loader {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n@-o-keyframes loader {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n@keyframes loader {\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n</style>\n"]}]}