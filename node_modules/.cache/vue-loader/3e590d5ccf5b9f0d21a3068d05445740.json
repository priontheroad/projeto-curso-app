{"remainingRequest":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/src/components/ArquivosDiversos/CampoData/CampoData.vue?vue&type=style&index=1&id=fb28e9be&scoped=true&lang=css&","dependencies":[{"path":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/src/components/ArquivosDiversos/CampoData/CampoData.vue","mtime":1678361197239},{"path":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/priscila_floriano/Documentos/diversos/rateio-importacao-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc3VidGl0bGUgewogIC8qIGNvbG9yOnJlZCAhaW1wb3J0YW50OyAqLwogIGZvbnQtc2l6ZTogMTJweDsKfQoKLnYtbWVudV9fY29udGVudC52LW1lbnVfX2NvbnRlbnQtLWZpeGVkIHsKICBtYXgtaGVpZ2h0OiAyOTBweCAhaW1wb3J0YW50OwogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0K"},{"version":3,"sources":["CampoData.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsLA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"CampoData.vue","sourceRoot":"src/components/ArquivosDiversos/CampoData","sourcesContent":["<template>\n  <div>\n    <v-menu\n      v-model=\"menuDI\"\n      ref=\"menuDI\"\n      :close-on-content-click=\"false\"\n      transition=\"scale-transition\"\n      offset-y\n      offset-overflow\n      max-width=\"290px\"\n      height=\"290px\"\n      class=\"tamanho\"\n    >\n      <template v-slot:activator=\"{ on, attrs }\">\n        <template>\n          <v-text-field\n            outlined\n            dense\n            v-model=\"dateFormatted\"\n            single-line\n            label=\"dd/mm/aaaa\"\n            v-mask=\"['##/##/####']\"\n            persistent-hint\n            v-bind=\"attrs\"\n            :error-messages=\"error_message\"\n            v-on=\"on\"\n            @input=\"v.$touch()\"\n            @blur=\"\n              verificaAdicionaDatePicker();\n              v.$touch();\n              date = parseDate(dateFormatted);\n            \"\n          >\n          </v-text-field>\n        </template>\n      </template>\n      <v-date-picker\n        :min=\"verificaDataMinima()\"\n        :max=\"verificaDataMaxima()\"\n        locale=\"pt-BR\"\n        v-model=\"dataDeclaracaoDI\"\n        no-title\n        @input=\"menuDI = false\"\n        color=\"#007cb3\"\n      ></v-date-picker>\n    </v-menu>\n  </div>\n</template>\n<script>\nimport moment from \"moment\";\n\nexport default {\n  name: \"CampoData\",\n  props: {\n    check: Boolean,\n    value: { type: String, default: \"\" },\n    v: { type: Object },\n    error_message: { type: Array },\n  },\n  data() {\n    return {\n      menuDI: false,\n      dateFormatted: \"\",\n      minima: moment().subtract(5, \"years\").format(\"YYYY-MM-DD\"),\n      maxima: moment().subtract(1, \"days\").format(\"YYYY-MM-DD\"),\n    };\n  },\n  computed: {\n    dataDeclaracaoDI: {\n      get() {\n        return this.value;\n      },\n      set(value) {\n        this.$emit(\"input\", value);\n      },\n    },\n  },\n  created() {\n    //colocando data na hora de carregar componente\n    this.dateFormatted = this.formatarData(this.value);\n  },\n  beforeMount() {},\n  methods: {\n    verificaDataMinima() {\n      let dataMinima = moment().subtract(5, \"years\").format(\"YYYY-MM-DD\");\n      this.minima = dataMinima;\n      return dataMinima;\n    },\n    verificaDataMaxima() {\n      let dataMaxima = moment().subtract(1, \"days\").format(\"YYYY-MM-DD\");\n      this.maxima = dataMaxima;\n      return dataMaxima;\n    },\n    validaDatas() {\n      let data_minima = this.minima;\n      let data_maxima = this.maxima;\n\n      if (\n        data_minima !== null &&\n        data_minima !== \"\" &&\n        data_maxima !== null &&\n        data_maxima !== \"\"\n      ) {\n        let quebraDataMinima = data_minima.split(\"-\");\n        let dataRegistroMinimo = new Date(\n          quebraDataMinima[0],\n          quebraDataMinima[1] - 1,\n          quebraDataMinima[2]\n        );\n\n        let quebraDataMaxima = data_maxima.split(\"-\");\n        let dataRegistroMaximo = new Date(\n          quebraDataMaxima[0],\n          quebraDataMaxima[1] - 1,\n          quebraDataMaxima[2]\n        );\n        if (dataRegistroMinimo < dataRegistroMaximo) {\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return true;\n      }\n    },\n    verificaAdicionaDatePicker() {\n      if (\n        this.dateFormatted !== null &&\n        this.dateFormatted !== \"\" &&\n        this.validaDatas() &&\n        this.dateFormatted.length == 10\n      ) {\n        //tirar mascara do input\n        let dateWithoutMask = this.removerMascara(this.dateFormatted);\n\n        let momentDate = moment(String(dateWithoutMask), \"YYYY-MM-DD\");\n        if (momentDate.isValid()) {\n          //TODO:: colocar data no v-date-picker\n          this.dataDeclaracaoDI = dateWithoutMask;\n          return true;\n        }\n      }\n\n      //resetando valores da data\n      this.dateFormatted = \"\";\n      this.dataDeclaracaoDI = \"\";\n    },\n    formatarData(date) {\n      if (!date) return null;\n\n      const [year, month, day] = date.split(\"-\");\n      return `${day}/${month}/${year}`;\n    },\n    removerMascara(date) {\n      if (!date) return null;\n\n      const [day, month, year] = date.split(\"/\");\n      return `${year}-${month}-${day}`;\n    },\n    parseDate(date) {\n      if (!date) return null;\n\n      const [day, month, year] = date.split(\"/\");\n      return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n    },\n  },\n  watch: {\n    dataDeclaracaoDI() {\n      this.dateFormatted = this.formatarData(this.dataDeclaracaoDI);\n    },\n    value() {\n      this.dateFormatted = this.formatarData(this.value);\n    },\n  },\n};\n</script>\n<style>\n.checkbox .v-label {\n  color: black !important;\n}\n</style>\n<style scoped>\n.subtitle {\n  /* color:red !important; */\n  font-size: 12px;\n}\n\n.v-menu__content.v-menu__content--fixed {\n  max-height: 290px !important;\n  background-color: #ffffff;\n}\n</style>"]}]}